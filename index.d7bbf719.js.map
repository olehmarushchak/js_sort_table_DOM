{"mappings":"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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["/* eslint-disable no-shadow */ /* eslint-disable prettier/prettier */ /* eslint-disable max-len */ \"use strict\";\nvar NAME = \"Name\";\nvar POSITION = \"Position\";\nvar AGE = \"Age\";\nvar SALARY = \"Salary\";\nvar headers = document.querySelectorAll(\"th\");\nvar topHeaders = Array.from(headers).slice(0, 4);\nvar table = Array.from(document.querySelectorAll(\"tr\", \"td\")).slice(1, -1);\nvar staff = [];\ntable.forEach(function(row) {\n    var memberStaff = {};\n    memberStaff.name = row.querySelectorAll(\"td\")[0].textContent;\n    memberStaff.position = row.querySelectorAll(\"td\")[1].textContent;\n    memberStaff.age = row.querySelectorAll(\"td\")[2].textContent;\n    memberStaff.salary = row.querySelectorAll(\"td\")[3].textContent;\n    staff.push(memberStaff);\n});\ntopHeaders.forEach(function(header) {\n    header.addEventListener(\"click\", function(event) {\n        switch(event.target.textContent){\n            case NAME:\n                var sortedByName = staff.sort(function(a, b) {\n                    return a.name.localeCompare(b.name);\n                });\n                table.forEach(function(row, index) {\n                    row.querySelectorAll(\"td\")[0].textContent = sortedByName[index].name;\n                    row.querySelectorAll(\"td\")[1].textContent = sortedByName[index].position;\n                    row.querySelectorAll(\"td\")[2].textContent = sortedByName[index].age;\n                    row.querySelectorAll(\"td\")[3].textContent = sortedByName[index].salary;\n                });\n                break;\n            case POSITION:\n                var sortedByPosition = staff.sort(function(a, b) {\n                    return a.position.localeCompare(b.position);\n                });\n                table.forEach(function(row, index) {\n                    row.querySelectorAll(\"td\")[0].textContent = sortedByPosition[index].name;\n                    row.querySelectorAll(\"td\")[1].textContent = sortedByPosition[index].position;\n                    row.querySelectorAll(\"td\")[2].textContent = sortedByPosition[index].age;\n                    row.querySelectorAll(\"td\")[3].textContent = sortedByPosition[index].salary;\n                });\n                break;\n            case AGE:\n                var sortedByAge = staff.sort(function(a, b) {\n                    return a.age - b.age;\n                });\n                table.forEach(function(row, index) {\n                    row.querySelectorAll(\"td\")[0].textContent = sortedByAge[index].name;\n                    row.querySelectorAll(\"td\")[1].textContent = sortedByAge[index].position;\n                    row.querySelectorAll(\"td\")[2].textContent = sortedByAge[index].age;\n                    row.querySelectorAll(\"td\")[3].textContent = sortedByAge[index].salary;\n                });\n                break;\n            case SALARY:\n                var sortedBySalary = staff.sort(function(a, b) {\n                    return a.salary.slice(1).replace(\",\", \"\") - b.salary.slice(1).replace(\",\", \"\");\n                });\n                table.forEach(function(row, index) {\n                    row.querySelectorAll(\"td\")[0].textContent = sortedBySalary[index].name;\n                    row.querySelectorAll(\"td\")[1].textContent = sortedBySalary[index].position;\n                    row.querySelectorAll(\"td\")[2].textContent = sortedBySalary[index].age;\n                    row.querySelectorAll(\"td\")[3].textContent = sortedBySalary[index].salary;\n                });\n                break;\n        }\n    });\n});\n\n//# sourceMappingURL=index.d7bbf719.js.map\n","/* eslint-disable no-shadow */\n/* eslint-disable prettier/prettier */\n/* eslint-disable max-len */\n'use strict';\n\nconst NAME = 'Name';\nconst POSITION = 'Position';\nconst AGE = 'Age';\nconst SALARY = 'Salary';\n\nconst headers = document.querySelectorAll('th');\nconst topHeaders = Array.from(headers).slice(0, 4);\nconst table = Array.from(document.querySelectorAll('tr', 'td')).slice(1, -1);\nconst staff = [];\n\ntable.forEach((row) => {\n  const memberStaff = {};\n\n  memberStaff.name = row.querySelectorAll('td')[0].textContent;\n  memberStaff.position = row.querySelectorAll('td')[1].textContent;\n  memberStaff.age = row.querySelectorAll('td')[2].textContent;\n  memberStaff.salary = row.querySelectorAll('td')[3].textContent;\n\n  staff.push(memberStaff);\n});\n\ntopHeaders.forEach((header) => {\n  header.addEventListener('click', (event) => {\n    switch (event.target.textContent) {\n      case NAME:\n        const sortedByName = staff.sort((a, b) => a.name.localeCompare(b.name));\n\n        table.forEach((row, index) => {\n          row.querySelectorAll('td')[0].textContent = sortedByName[index].name;\n\n          row.querySelectorAll('td')[1].textContent =\n            sortedByName[index].position;\n\n          row.querySelectorAll('td')[2].textContent = sortedByName[index].age;\n\n          row.querySelectorAll('td')[3].textContent =\n            sortedByName[index].salary;\n        });\n        break;\n\n      case POSITION:\n        const sortedByPosition = staff.sort((a, b) =>\n          a.position.localeCompare(b.position));\n\n        table.forEach((row, index) => {\n          row.querySelectorAll('td')[0].textContent =\n            sortedByPosition[index].name;\n\n          row.querySelectorAll('td')[1].textContent =\n            sortedByPosition[index].position;\n\n          row.querySelectorAll('td')[2].textContent =\n            sortedByPosition[index].age;\n\n          row.querySelectorAll('td')[3].textContent =\n            sortedByPosition[index].salary;\n        });\n        break;\n\n      case AGE:\n        const sortedByAge = staff.sort((a, b) => a.age - b.age);\n\n        table.forEach((row, index) => {\n          row.querySelectorAll('td')[0].textContent = sortedByAge[index].name;\n\n          row.querySelectorAll('td')[1].textContent =\n            sortedByAge[index].position;\n          row.querySelectorAll('td')[2].textContent = sortedByAge[index].age;\n\n          row.querySelectorAll('td')[3].textContent = sortedByAge[index].salary;\n        });\n        break;\n\n      case SALARY:\n        const sortedBySalary = staff.sort(\n          (a, b) =>\n            a.salary.slice(1).replace(',', '') -\n            b.salary.slice(1).replace(',', ''),\n        );\n\n        table.forEach((row, index) => {\n          row.querySelectorAll('td')[0].textContent =\n            sortedBySalary[index].name;\n\n          row.querySelectorAll('td')[1].textContent =\n            sortedBySalary[index].position;\n          row.querySelectorAll('td')[2].textContent = sortedBySalary[index].age;\n\n          row.querySelectorAll('td')[3].textContent =\n            sortedBySalary[index].salary;\n        });\n\n        break;\n    }\n  });\n});\n"],"names":["topHeaders","Array","from","document","querySelectorAll","slice","table","staff","forEach","row","memberStaff","name","textContent","position","age","salary","push","header","addEventListener","event","target","sortedByName","sort","a","b","localeCompare","index","sortedByPosition","sortedByAge","sortedBySalary","replace"],"version":3,"file":"index.d7bbf719.js.map"}